// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class KeyExchangeMessage;
@class KeyExchangeMessageBuilder;
@class PreKeyWhisperMessage;
@class PreKeyWhisperMessageBuilder;
@class SenderKeyDistributionMessage;
@class SenderKeyDistributionMessageBuilder;
@class SenderKeyMessage;
@class SenderKeyMessageBuilder;
@class WhisperMessage;
@class WhisperMessageBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface WhisperTextProtocolRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface WhisperMessage : PBGeneratedMessage {
@private
  BOOL hasRatchetKey_:1;
  BOOL hasCiphertext_:1;
  BOOL hasCounter_:1;
  BOOL hasPreviousCounter_:1;
  NSData* ratchetKey;
  NSData* ciphertext;
  UInt32 counter;
  UInt32 previousCounter;
}
- (BOOL) hasRatchetKey;
- (BOOL) hasCounter;
- (BOOL) hasPreviousCounter;
- (BOOL) hasCiphertext;
@property (readonly, strong) NSData* ratchetKey;
@property (readonly) UInt32 counter;
@property (readonly) UInt32 previousCounter;
@property (readonly, strong) NSData* ciphertext;

+ (WhisperMessage*) defaultInstance;
- (WhisperMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (WhisperMessageBuilder*) builder;
+ (WhisperMessageBuilder*) builder;
+ (WhisperMessageBuilder*) builderWithPrototype:(WhisperMessage*) prototype;
- (WhisperMessageBuilder*) toBuilder;

+ (WhisperMessage*) parseFromData:(NSData*) data;
+ (WhisperMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WhisperMessage*) parseFromInputStream:(NSInputStream*) input;
+ (WhisperMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (WhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (WhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface WhisperMessageBuilder : PBGeneratedMessageBuilder {
@private
  WhisperMessage* result;
}

- (WhisperMessage*) defaultInstance;

- (WhisperMessageBuilder*) clear;
- (WhisperMessageBuilder*) clone;

- (WhisperMessage*) build;
- (WhisperMessage*) buildPartial;

- (WhisperMessageBuilder*) mergeFrom:(WhisperMessage*) other;
- (WhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (WhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRatchetKey;
- (NSData*) ratchetKey;
- (WhisperMessageBuilder*) setRatchetKey:(NSData*) value;
- (WhisperMessageBuilder*) clearRatchetKey;

- (BOOL) hasCounter;
- (UInt32) counter;
- (WhisperMessageBuilder*) setCounter:(UInt32) value;
- (WhisperMessageBuilder*) clearCounter;

- (BOOL) hasPreviousCounter;
- (UInt32) previousCounter;
- (WhisperMessageBuilder*) setPreviousCounter:(UInt32) value;
- (WhisperMessageBuilder*) clearPreviousCounter;

- (BOOL) hasCiphertext;
- (NSData*) ciphertext;
- (WhisperMessageBuilder*) setCiphertext:(NSData*) value;
- (WhisperMessageBuilder*) clearCiphertext;
@end

@interface PreKeyWhisperMessage : PBGeneratedMessage {
@private
  BOOL hasBaseKey_:1;
  BOOL hasIdentityKey_:1;
  BOOL hasMessage_:1;
  BOOL hasRegistrationId_:1;
  BOOL hasPreKeyId_:1;
  BOOL hasSignedPreKeyId_:1;
  NSData* baseKey;
  NSData* identityKey;
  NSData* message;
  UInt32 registrationId;
  UInt32 preKeyId;
  UInt32 signedPreKeyId;
}
- (BOOL) hasRegistrationId;
- (BOOL) hasPreKeyId;
- (BOOL) hasSignedPreKeyId;
- (BOOL) hasBaseKey;
- (BOOL) hasIdentityKey;
- (BOOL) hasMessage;
@property (readonly) UInt32 registrationId;
@property (readonly) UInt32 preKeyId;
@property (readonly) UInt32 signedPreKeyId;
@property (readonly, strong) NSData* baseKey;
@property (readonly, strong) NSData* identityKey;
@property (readonly, strong) NSData* message;

+ (PreKeyWhisperMessage*) defaultInstance;
- (PreKeyWhisperMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PreKeyWhisperMessageBuilder*) builder;
+ (PreKeyWhisperMessageBuilder*) builder;
+ (PreKeyWhisperMessageBuilder*) builderWithPrototype:(PreKeyWhisperMessage*) prototype;
- (PreKeyWhisperMessageBuilder*) toBuilder;

+ (PreKeyWhisperMessage*) parseFromData:(NSData*) data;
+ (PreKeyWhisperMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PreKeyWhisperMessage*) parseFromInputStream:(NSInputStream*) input;
+ (PreKeyWhisperMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PreKeyWhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PreKeyWhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PreKeyWhisperMessageBuilder : PBGeneratedMessageBuilder {
@private
  PreKeyWhisperMessage* result;
}

- (PreKeyWhisperMessage*) defaultInstance;

- (PreKeyWhisperMessageBuilder*) clear;
- (PreKeyWhisperMessageBuilder*) clone;

- (PreKeyWhisperMessage*) build;
- (PreKeyWhisperMessage*) buildPartial;

- (PreKeyWhisperMessageBuilder*) mergeFrom:(PreKeyWhisperMessage*) other;
- (PreKeyWhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PreKeyWhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRegistrationId;
- (UInt32) registrationId;
- (PreKeyWhisperMessageBuilder*) setRegistrationId:(UInt32) value;
- (PreKeyWhisperMessageBuilder*) clearRegistrationId;

- (BOOL) hasPreKeyId;
- (UInt32) preKeyId;
- (PreKeyWhisperMessageBuilder*) setPreKeyId:(UInt32) value;
- (PreKeyWhisperMessageBuilder*) clearPreKeyId;

- (BOOL) hasSignedPreKeyId;
- (UInt32) signedPreKeyId;
- (PreKeyWhisperMessageBuilder*) setSignedPreKeyId:(UInt32) value;
- (PreKeyWhisperMessageBuilder*) clearSignedPreKeyId;

- (BOOL) hasBaseKey;
- (NSData*) baseKey;
- (PreKeyWhisperMessageBuilder*) setBaseKey:(NSData*) value;
- (PreKeyWhisperMessageBuilder*) clearBaseKey;

- (BOOL) hasIdentityKey;
- (NSData*) identityKey;
- (PreKeyWhisperMessageBuilder*) setIdentityKey:(NSData*) value;
- (PreKeyWhisperMessageBuilder*) clearIdentityKey;

- (BOOL) hasMessage;
- (NSData*) message;
- (PreKeyWhisperMessageBuilder*) setMessage:(NSData*) value;
- (PreKeyWhisperMessageBuilder*) clearMessage;
@end

@interface KeyExchangeMessage : PBGeneratedMessage {
@private
  BOOL hasBaseKey_:1;
  BOOL hasRatchetKey_:1;
  BOOL hasIdentityKey_:1;
  BOOL hasBaseKeySignature_:1;
  BOOL hasId_:1;
  NSData* baseKey;
  NSData* ratchetKey;
  NSData* identityKey;
  NSData* baseKeySignature;
  UInt32 id;
}
- (BOOL) hasId;
- (BOOL) hasBaseKey;
- (BOOL) hasRatchetKey;
- (BOOL) hasIdentityKey;
- (BOOL) hasBaseKeySignature;
@property (readonly) UInt32 id;
@property (readonly, strong) NSData* baseKey;
@property (readonly, strong) NSData* ratchetKey;
@property (readonly, strong) NSData* identityKey;
@property (readonly, strong) NSData* baseKeySignature;

+ (KeyExchangeMessage*) defaultInstance;
- (KeyExchangeMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KeyExchangeMessageBuilder*) builder;
+ (KeyExchangeMessageBuilder*) builder;
+ (KeyExchangeMessageBuilder*) builderWithPrototype:(KeyExchangeMessage*) prototype;
- (KeyExchangeMessageBuilder*) toBuilder;

+ (KeyExchangeMessage*) parseFromData:(NSData*) data;
+ (KeyExchangeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KeyExchangeMessage*) parseFromInputStream:(NSInputStream*) input;
+ (KeyExchangeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KeyExchangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KeyExchangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KeyExchangeMessageBuilder : PBGeneratedMessageBuilder {
@private
  KeyExchangeMessage* result;
}

- (KeyExchangeMessage*) defaultInstance;

- (KeyExchangeMessageBuilder*) clear;
- (KeyExchangeMessageBuilder*) clone;

- (KeyExchangeMessage*) build;
- (KeyExchangeMessage*) buildPartial;

- (KeyExchangeMessageBuilder*) mergeFrom:(KeyExchangeMessage*) other;
- (KeyExchangeMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KeyExchangeMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (KeyExchangeMessageBuilder*) setId:(UInt32) value;
- (KeyExchangeMessageBuilder*) clearId;

- (BOOL) hasBaseKey;
- (NSData*) baseKey;
- (KeyExchangeMessageBuilder*) setBaseKey:(NSData*) value;
- (KeyExchangeMessageBuilder*) clearBaseKey;

- (BOOL) hasRatchetKey;
- (NSData*) ratchetKey;
- (KeyExchangeMessageBuilder*) setRatchetKey:(NSData*) value;
- (KeyExchangeMessageBuilder*) clearRatchetKey;

- (BOOL) hasIdentityKey;
- (NSData*) identityKey;
- (KeyExchangeMessageBuilder*) setIdentityKey:(NSData*) value;
- (KeyExchangeMessageBuilder*) clearIdentityKey;

- (BOOL) hasBaseKeySignature;
- (NSData*) baseKeySignature;
- (KeyExchangeMessageBuilder*) setBaseKeySignature:(NSData*) value;
- (KeyExchangeMessageBuilder*) clearBaseKeySignature;
@end

@interface SenderKeyMessage : PBGeneratedMessage {
@private
  BOOL hasCiphertext_:1;
  BOOL hasId_:1;
  BOOL hasIteration_:1;
  NSData* ciphertext;
  UInt32 id;
  UInt32 iteration;
}
- (BOOL) hasId;
- (BOOL) hasIteration;
- (BOOL) hasCiphertext;
@property (readonly) UInt32 id;
@property (readonly) UInt32 iteration;
@property (readonly, strong) NSData* ciphertext;

+ (SenderKeyMessage*) defaultInstance;
- (SenderKeyMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SenderKeyMessageBuilder*) builder;
+ (SenderKeyMessageBuilder*) builder;
+ (SenderKeyMessageBuilder*) builderWithPrototype:(SenderKeyMessage*) prototype;
- (SenderKeyMessageBuilder*) toBuilder;

+ (SenderKeyMessage*) parseFromData:(NSData*) data;
+ (SenderKeyMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SenderKeyMessage*) parseFromInputStream:(NSInputStream*) input;
+ (SenderKeyMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SenderKeyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SenderKeyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SenderKeyMessageBuilder : PBGeneratedMessageBuilder {
@private
  SenderKeyMessage* result;
}

- (SenderKeyMessage*) defaultInstance;

- (SenderKeyMessageBuilder*) clear;
- (SenderKeyMessageBuilder*) clone;

- (SenderKeyMessage*) build;
- (SenderKeyMessage*) buildPartial;

- (SenderKeyMessageBuilder*) mergeFrom:(SenderKeyMessage*) other;
- (SenderKeyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SenderKeyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (SenderKeyMessageBuilder*) setId:(UInt32) value;
- (SenderKeyMessageBuilder*) clearId;

- (BOOL) hasIteration;
- (UInt32) iteration;
- (SenderKeyMessageBuilder*) setIteration:(UInt32) value;
- (SenderKeyMessageBuilder*) clearIteration;

- (BOOL) hasCiphertext;
- (NSData*) ciphertext;
- (SenderKeyMessageBuilder*) setCiphertext:(NSData*) value;
- (SenderKeyMessageBuilder*) clearCiphertext;
@end

@interface SenderKeyDistributionMessage : PBGeneratedMessage {
@private
  BOOL hasChainKey_:1;
  BOOL hasSigningKey_:1;
  BOOL hasId_:1;
  BOOL hasIteration_:1;
  NSData* chainKey;
  NSData* signingKey;
  UInt32 id;
  UInt32 iteration;
}
- (BOOL) hasId;
- (BOOL) hasIteration;
- (BOOL) hasChainKey;
- (BOOL) hasSigningKey;
@property (readonly) UInt32 id;
@property (readonly) UInt32 iteration;
@property (readonly, strong) NSData* chainKey;
@property (readonly, strong) NSData* signingKey;

+ (SenderKeyDistributionMessage*) defaultInstance;
- (SenderKeyDistributionMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SenderKeyDistributionMessageBuilder*) builder;
+ (SenderKeyDistributionMessageBuilder*) builder;
+ (SenderKeyDistributionMessageBuilder*) builderWithPrototype:(SenderKeyDistributionMessage*) prototype;
- (SenderKeyDistributionMessageBuilder*) toBuilder;

+ (SenderKeyDistributionMessage*) parseFromData:(NSData*) data;
+ (SenderKeyDistributionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SenderKeyDistributionMessage*) parseFromInputStream:(NSInputStream*) input;
+ (SenderKeyDistributionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SenderKeyDistributionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SenderKeyDistributionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SenderKeyDistributionMessageBuilder : PBGeneratedMessageBuilder {
@private
  SenderKeyDistributionMessage* result;
}

- (SenderKeyDistributionMessage*) defaultInstance;

- (SenderKeyDistributionMessageBuilder*) clear;
- (SenderKeyDistributionMessageBuilder*) clone;

- (SenderKeyDistributionMessage*) build;
- (SenderKeyDistributionMessage*) buildPartial;

- (SenderKeyDistributionMessageBuilder*) mergeFrom:(SenderKeyDistributionMessage*) other;
- (SenderKeyDistributionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SenderKeyDistributionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (SenderKeyDistributionMessageBuilder*) setId:(UInt32) value;
- (SenderKeyDistributionMessageBuilder*) clearId;

- (BOOL) hasIteration;
- (UInt32) iteration;
- (SenderKeyDistributionMessageBuilder*) setIteration:(UInt32) value;
- (SenderKeyDistributionMessageBuilder*) clearIteration;

- (BOOL) hasChainKey;
- (NSData*) chainKey;
- (SenderKeyDistributionMessageBuilder*) setChainKey:(NSData*) value;
- (SenderKeyDistributionMessageBuilder*) clearChainKey;

- (BOOL) hasSigningKey;
- (NSData*) signingKey;
- (SenderKeyDistributionMessageBuilder*) setSigningKey:(NSData*) value;
- (SenderKeyDistributionMessageBuilder*) clearSigningKey;
@end


// @@protoc_insertion_point(global_scope)
